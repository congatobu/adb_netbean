/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ephoenix.adb;


import com.ephoenix.adb.util.FilesHelper;
import com.ephoenix.adb.util.Utils;
import java.util.LinkedList;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mini-pc
 */
public class ScriptFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form ScriptFrame
     */
    public ScriptFrame() {
        initComponents();

        ListSelectionModel select = scriptsTable.getSelectionModel();

        select.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {

                int row = scriptsTable.getSelectedRow();

                if (row >= 0) {


                    String name = (String) scriptsTable.getValueAt(row, 0);

                    String id = (String) scriptsTable.getValueAt(row, 1);

                    Application.log(name + " - " + id);


                    scriptsTable.clearSelection();
                    
                    Application.createScriptBuilder(name);
                    
                    
                }
            }

        });

    }

    public void init() {

        String[] files = FilesHelper.getAllFile(Constant.SCRIPTS_URL, "txt");

        if (files == null) {

            return;

        }

        DefaultTableModel tm = (DefaultTableModel) scriptsTable.getModel();

        tm.setRowCount(0);

        for (String file : files) {

           String path  = Constant.SCRIPTS_URL + "\\" + file;

            LinkedList<String> context = Utils.readFile(path);

            String connect = context.removeFirst();

            connect = connect.replaceAll("\\s+", " ");

            String[] data = Utils.validText(connect);
            
            String[] row = new String[5];
            
            System.arraycopy(data, 0, row, 1, 4);
            
            row[0] = file;
            
            tm.addRow(row);

        }

        scriptsTable.setModel(tm);
        tm.fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        scriptsTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Scripts");
        setPreferredSize(new java.awt.Dimension(800, 800));

        scriptsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "Application", "url", "package", "note"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(scriptsTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 784, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 486, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 184, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable scriptsTable;
    // End of variables declaration//GEN-END:variables
}
